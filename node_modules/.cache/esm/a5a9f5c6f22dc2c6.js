let registerModel;_f22‍.x([["default",()=>_f22‍.o]]);_f22‍.w("../models/register.model",[["default",["registerModel"],function(v){registerModel=v}]]);


const loginController = {

    async login(req, res) {
        try {
          const { email, password } = req.body;
          if (!email || !password) {
            return res.status(400).json({ msg: "all fields required" });
          }
          const user = await registerModel.findOne({ email: email });
          if (!user) {
            return res
              .status(400)
              .json({ msg: "No account with this email has been registered." });
          }
          const isMatch = await compare(password, user.password);
          if (!isMatch)
            return res.status(400).json({ msg: "Invalid credentials." });

          res.status(201).json({success: true })
        }
         catch (err) {
          res.status(500).json({ error: err.message });
        }  
    
      },
}



_f22‍.d(loginController);